<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head'); %>
    <script src="../partials/rpo.js"></script>
    <%
    function checkRPO(data) {
      const rpoFlags = {
        has1LE: ['A1Y', 'A1X', 'A1Z'],
        hasCE: ['Z4B'],
        hasG56: ['X56'],
        hasZ51: ['Z51'],
        hasZCR: ['ZCR'],
        hasY70: ['Y70'],
        hasZ07: ['Z07'],
        hasZLE: ['ZLE'],
        hasZLD: ['ZLD'],
        hasZLG: ['ZLG'],
        hasZLK: ['ZLK'],
        hasZLJ: ['ZLJ'],
        hasZLR: ['ZLR'],
        hasABQ: ['ABQ'],
        hasOAR: ['OAR'],
      };
  
      let flags = {
        has1LE: false, 
        hasCE: false, 
        hasG56: false, 
        hasZ51: false, 
        hasZCR: false, 
        hasY70: false, 
        hasZ07: false, 
        hasZLE: false, 
        hasZLD: false, 
        hasZLG: false, 
        hasZLK: false, 
        hasZLJ: false, 
        hasZLR: false, 
        hasABQ: false, 
        hasOAR: false,
        interiorColor: 'N/A',
        seat: 'N/A',
      };
  
      if (data.allJson) {
        const rpos = JSON.parse(data.allJson).Options;
        if (rpos) {
          for (const [flag, codes] of Object.entries(rpoFlags)) {
            if (codes.some(code => rpos.includes(code))) {
              flags[flag] = true;
            }
          }
  
          for (const rpo of rpos) {
            if (intColor[rpo]) {
              flags.interiorColor = intColor[rpo];
            }
            if (seatCode[rpo]) {
              flags.seat = seatCode[rpo];
            }
          }
        }
      }
  
      return flags;
    }
  
    let allHas = {
      has1LE: false, 
      hasCE: false, 
      hasG56: false, 
      hasZ51: false, 
      hasZCR: false, 
      hasY70: false, 
      hasZ07: false, 
      hasZLE: false, 
      hasZLD: false, 
      hasZLG: false, 
      hasZLK: false, 
      hasZLJ: false, 
      hasZLR: false, 
      hasABQ: false, 
      hasOAR: false,
      interiorColor: 'N/A',
      seat: 'N/A',
    };
  
    vin_data.forEach(data => {
      const result = checkRPO(data);
      for (const key in allHas) {
        if (key !== 'interiorColor' && key !== 'seat') {
          allHas[key] = allHas[key] || result[key];
        }
      }
      if (result.interiorColor !== 'N/A') allHas.interiorColor = result.interiorColor;
      if (result.seat !== 'N/A') allHas.seat = result.seat;
    });
    %>  
    <title>
      <%= (vin_data[0].modelYear ? "'" + vin_data[0].modelYear.toString().slice(-2) : 'N/A') %>
      <%= vin_data[0].model || 'N/A' %> 
      <%= vin_data[0].trim || 'N/A' %> 
      <%= allHas.has1LE ? '1LE' : '' %>
      <%= allHas.hasCE ? 'CE' : '' %>
      <%= allHas.hasG56 ? 'G56' : '' %>
      <%= allHas.hasZ51 ? 'Z51' : '' %>
      <%= allHas.hasZCR ? 'C8.R' : '' %>
      <%= allHas.hasY70 ? '70th' : '' %>
      <%= allHas.hasZ07 ? 'Z07' : '' %>
      <%= allHas.hasZLE ? 'WG IMSA' : '' %>
      <%= allHas.hasZLD ? 'S IMSA' : '' %>
      <%= allHas.hasZLG ? 'RA IMSA' : '' %>
      <%= allHas.hasZLK ? 'Arrival' : '' %>
      <%= allHas.hasZLJ ? 'Impact' : '' %>
      <%= allHas.hasZLR ? 'Elevation' : '' %>
      <%= allHas.hasABQ ? '120th' : '' %>
      <%= allHas.hasOAR ? 'PREPROD' : '' %>
    </title>
</head>

<body>
  <%- include('../partials/header'); %>

    <div class="container">
        <div class="row">
          <% if (vin_data && vin_data.length > 0) { %>
            <h1 style="padding-top: 20px; display: flex; align-items: center; width: 100%;">
              <%= vin_data[0].modelYear || 'N/A' %>
              <%= vin_data[0].model || 'N/A' %>
              <%= vin_data[0].trim || 'N/A' %>
            </h1>
              <%
                let features = [];
                let has1LE = false; 
                let hasCE = false;
                let hasG56 = false;
                let hasZ51 = false;
                let hasZCR = false;
                let hasY70 = false;
                let hasZ07 = false;
                let hasZLE = false;
                let hasZLD = false;
                let hasZLG = false;
                let hasZLK = false;
                let hasZLJ = false;
                let hasZLR = false;
                let hasABQ = false;
                let hasOAR = false;
            
                vin_data.forEach(data => {
                  if (data.allJson) {
                    const rpos = JSON.parse(data.allJson).Options;
                    if (rpos && (rpos.includes('A1Y') || rpos.includes('A1X') || rpos.includes('A1Z'))) {
                      has1LE = true;
                    }
                    if (rpos && rpos.includes('Z4B')) {
                      hasCE = true;
                    }
                    if (rpos && rpos.includes('X56')) {
                      hasG56 = true;
                    }
                    if (rpos && rpos.includes('Z51')) {
                      hasZ51 = true;
                    }
                    if (rpos && rpos.includes('ZCR')) {
                      hasZCR = true;
                    }
                    if (rpos && rpos.includes('Y70')) {
                      hasY70 = true;
                    }
                    if (rpos && rpos.includes('Z07')) {
                      hasZ07 = true;
                    }
                    if (rpos && rpos.includes('ZLE')) {
                      hasZLE = true;
                    }
                    if (rpos && rpos.includes('ZLD')) {
                      hasZLD = true;
                    }
                    if (rpos && rpos.includes('ZLG')) {
                      hasZLG = true;
                    }
                    if (rpos && rpos.includes('ZLK')) {
                      hasZLK = true;
                    }
                    if (rpos && rpos.includes('ZLJ')) {
                      hasZLJ = true;
                    }
                    if (rpos && rpos.includes('ZLR')) {
                      hasZLR = true;
                    }
                    if (rpos && rpos.includes('ABQ')) {
                      hasABQ = true;
                    }
                    if (rpos && rpos.includes('OAR')) {
                      hasOAR = true;
                    }
                  }
                });
            
                if (has1LE) features.push('1LE');
                if (hasCE) features.push('Collectors Edition');
                if (hasG56) features.push('Garage 56 Special Edition');
                if (hasZ51) features.push('Z51 Performance Package');
                if (hasZCR) features.push('IMSA GTLM Championship C8.R Edition');
                if (hasY70) features.push('70th Anniversary Edition');
                if (hasZ07) features.push('Z07 Performance Package');
                if (hasZLE) features.push('Watkins Glen IMSA Edition');
                if (hasZLD) features.push('Sebring IMSA Edition');
                if (hasZLG) features.push('Road Atlanta IMSA Edition');
                if (hasZLK) features.push('Arrival Edition');
                if (hasZLJ) features.push('Impact Edition');
                if (hasZLR) features.push('Elevation Edition');
                if (hasABQ) features.push('120th Anniversary Edition');
                if (hasOAR) features.push('Pre-Production Vehicle');
              %>
              <% if (features.length > 0) { %>
                <div>
                  <% features.forEach(feature => { %>
                    <h4><em><%= feature %></em></h4>
                  <% }) %>
                </div>
              <% } %>            
            <table class="table-veh table-hover border border shadow" id="vinTable">
              <tbody>
                  <% vin_data.forEach(function(data) { %>
                  <tr data-alljson='<%= JSON.stringify(data.allJson) %>'>
                    <td class="label-column"><strong>VIN:</strong></td>
                    <td><%= data.vin || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>ORDER NUMBER:</strong></td>
                    <td><%= data.ordernum || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>STICKER CREATION DATE:</strong></td>
                    <td>
                      <%= data.allJson ? new Date(JSON.parse(data.allJson).creation_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A' %>
                    </td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>YEAR:</strong></td>
                    <td><%= data.modelYear || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>MODEL:</strong></td>
                    <td><%= data.model || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>TRIM:</strong></td>
                    <td><%= data.trim || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>BODY:</strong></td>
                    <td><%= data.body || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>ENGINE:</strong></td>
                    <td><%= data.vehicleEngine || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>TRANSMISSION:</strong></td>
                    <td><%= data.transmission || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>DRIVETRAIN:</strong></td>
                    <td><%= data.drivetrain || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>EXTERIOR COLOR:</strong></td>
                    <td><%= data.exterior_color || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>INTERIOR COLOR:</strong></td>
                    <td><%= data.allJson ? checkRPO(data).interiorColor : 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>SEAT:</strong></td>
                    <td><%= data.allJson ? checkRPO(data).seat : 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>MSRP:</strong></td>
                    <td>$<%= data.msrp || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>DEALER:</strong></td>
                    <td><%= data.dealer || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>LOCATION:</strong></td>
                    <td><%= data.location || 'N/A' %></td>
                  </tr>
                  <tr>
                    <td class="label-column"><strong>COUNTRY:</strong></td>
                    <td>
                      <% if (data.location) { %>
                        <% const state = data.location.split(',')[1]?.trim().split(' ')[0]; %>
                        <% if (state && ["AB", "BC", "MB", "NF", "NT", "ON", "PE", "PQ", "SK"].includes(state)) { %>
                          <img src="../img/flags/canada_flag.png" alt="Canada" width="30" style="margin-right: 5px;">CANADA
                        <% } else { %>
                          <img src="../img/flags/usa_flag.png" alt="USA" width="30" style="margin-right: 5px;">UNITED STATES
                        <% } %>
                      <% } else { %>
                        <img src="../img/flags/mexico_flag.png" alt="Mexico" width="30" style="margin-right: 5px;">MEXICO
                      <% } %>
                    </td>
                  </tr>
                  <% }) %>
              </tbody>
            </table>
            <!-- Photo Carousel -->
            <div id="carousel-container" style="position: relative; min-height: 740px; width: 100%; margin: auto; overflow: hidden;">
              <div id="loading-animation">
                <div class="spinner" style="position: absolute; top: 48%; left: 50%; transform: translate(-50%, -50%); align-items: center;"></div>
                <h4 style="position: absolute; top: 58%; left: 51%; transform: translate(-50%, -50%); align-items: center;">Generating Photos...</h4>
              </div>
              <img id="carousel-image" src="" style="width: 100%;">
              <button id="prev" style="position: absolute; top: 50%; left: 0; background-color: rgba(0, 0, 0, 0.5); color: white; border: none; padding: 10px; cursor: pointer; z-index: 100;">&#10094;</button>
              <button id="next" style="position: absolute; top: 50%; right: 0; background-color: rgba(0, 0, 0, 0.5); color: white; border: none; padding: 10px; cursor: pointer; z-index: 100;">&#10095;</button>
            </div>
            <!-- Window Sticker -->
            <div id="sticker-container">
              <iframe id="window-sticker" src="https://cws.gm.com/vs-cws/vehshop/v2/vehicle/windowsticker?vin=<%= vin_data[0].vin || 'N/A' %>" style="min-height: 886px; width: 100%;"></iframe>
            </div>
            <div class="rarity-container">
              <% vin_data.forEach(function(data) { %>
                <% if (data.allJson) { %>
                  <button id="see-rarity" class="btn btn-primary rarity-btn" data-alljson='<%= JSON.stringify(data.allJson) %>'>See Rarity</button>
                <% } %>
              <% }); %>
              <div class="response-container">
                <div id="response" class="response"></div>
                <div><a id="snark" style="color: rgb(40, 40, 40);"></a></div>
              </div>
            </div>
            <table class="table-veh table-hover border border shadow" id="rpoTable">
              <thead>
                <tr>
                  <th scope="col" style="white-space: nowrap;">RPO Code</th>
                  <th scope="col">Description</th>
                </tr>
              </thead>
              <tbody>
                <% vin_data.forEach(function(data) { %>
                  <% if (data.allJson) { %>
                    <% 
                      const rpos = (JSON.parse(data.allJson)).Options;
                    %>
                    <% rpos.forEach(function(rpo) { %>
                      <% if (rpo) { %>
                        <tr>
                          <td class="<%= rpo.includes('OAR') ? 'highlight' : '' %>"><%= rpo %></td>
                          <td class="rpo-description" data-code="<%= rpo || 'N/A' %>" style="text-align: left;"></td>
                        </tr>
                      <% } %>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="2">No data available</td>
                    </tr>
                  <% } %>
                <% }) %>
              </tbody>
            </table>
            <h5 style="color: white;">
              RPOs Decoded by <a href="https://decoderpo.com/" style="color: white; text-decoration: underline;">https://decoderpo.com/</a>
            </h5>            
          <% } else { %>
            <h1>No VIN data found</h1>
          <% } %>
        </div>
    </div>
    <%- include('../partials/footer'); %>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const descriptionCells = document.querySelectorAll('.rpo-description');
        descriptionCells.forEach(cell => {
            const code = cell.getAttribute('data-code');
            cell.textContent = getRPODescription(code);
        });

        const mmc = <%- JSON.stringify(mmc) %>;
        const colorMap = <%- JSON.stringify(colorMap) %>;
        const intColor = <%- JSON.stringify(intColor) %>;
        const allJson = <%- JSON.stringify(vin_data[0].allJson) %>;

        const carouselImage = document.getElementById('carousel-image');
        const loadingAnimation = document.getElementById('loading-animation');
        loadingAnimation.style.direction = 'block';
        const data = { mmc, colorMap, intColor, allJson };

        fetch('/api/genurl', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(data => {
          const images = data.url.generatedImages;

          if (images === "../img/ghost-chevrolet-car-alt.png") {
            carouselImage.src = images;
            loadingAnimation.style.display = 'none';
          } else {
            let currentIndex = 0;
            let initialLoad = true;

            function showImage(index) {
                if (initialLoad) {
                    carouselImage.src = images[index];
                    carouselImage.alt = `Image ${index + 1}`;
                    loadingAnimation.style.display = 'none';
                    initialLoad = false;
                } else {
                    carouselImage.style.opacity = 0;
                    setTimeout(() => {
                        carouselImage.src = images[index];
                        carouselImage.alt = `Image ${index + 1}`;
                        carouselImage.style.opacity = 1;
                    }, 200);
                }
            }

            showImage(currentIndex);

            document.getElementById('prev').addEventListener('click', () => {
              currentIndex = (currentIndex === 0) ? images.length - 1 : currentIndex - 1;
              showImage(currentIndex);
            });

            document.getElementById('next').addEventListener('click', () => {
              currentIndex = (currentIndex === images.length - 1) ? 0 : currentIndex + 1;
              showImage(currentIndex);
            });
          }
        })
        .catch(error => {
        console.error('Error loading generated photo:', error);
        });

        
        const button = document.getElementById('see-rarity');
        button.addEventListener('click', () => {
          const allJson = button.getAttribute('data-alljson');
          const dataObject = JSON.parse(allJson);

          fetch('/api/rarity', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: dataObject,
          })
          .then(response => response.json())
          .then(data => {
              document.getElementById('response').textContent = `1 of ${data[0].Count}`;
              document.getElementById('snark').textContent = "- on the fourth Tuesday, after company lunch with a crescent moon when Joey went home early...";
          })
          .catch((error) => {
              console.error('Error:', error);
          });
        });
      });
    </script>
</body>

</html>
