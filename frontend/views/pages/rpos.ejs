<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head'); %>
    <meta property="og:url" content="https://www.gmbuildcounts.com/">
    <link rel="canonical" href="https://gmbuildcounts.com/rpos">
    <title>RPOs</title>
    <%- include('../partials/analytics'); %>
    <style>
        .rpo-container {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            justify-content: start;
        }
        .rpo-card {
            padding: 8px;
            width: 400px;
            text-align: center;
            color: white;
        }
        .rpo-card img {
            width: 100%;
            height: auto;
        }
        .rpo-description {
            text-align: center;
        }
        .rpo-card {
            transition: transform 0.2s ease-in-out;
        }
        .rpo-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <%- include('../partials/header'); %>

    <div class="container pt-4">
        <h1 style="font-weight: bold;">RPOs</h1>
        <div class="d-flex flex-wrap gap-2 mb-3">
            <div class="statsDropdown">
                <select id="modelSelect" class="form-select small-dropdown">
                    <option value="">Select Model</option>
                    <option value="camaro">Camaro</option>
                    <option value="corvette">Corvette</option>
                </select>
            </div>
        </div>
        <div class="rpo-container" id="rpoContainer"></div>
    </div>

    <script>
        const container = document.getElementById('rpoContainer');
        const modelSelect = document.getElementById('modelSelect');

        // Example RPO data for multiple models
        const allRpos = {
            camaro: <%- JSON.stringify(camaroRpo) %>,
            corvette: <%- JSON.stringify(corvetteRpo) %>,
        };

        function renderRPOs(model) {
            container.innerHTML = '';
            const rpos = allRpos[model];
            const missingRpos = [];

            Object.keys(rpos).forEach(rpo => {
                const link = document.createElement('a');
                link.href = `/vehicles?model=${model}&rpo=${rpo}`;
                link.style.textDecoration = 'none';
                link.style.display = 'block';

                const card = document.createElement('div');
                card.className = 'rpo-card';

                const img = document.createElement('img');
                img.src = `../img/rpos/${model}/${rpo}.jpg`;
                img.alt = rpo;
                img.onerror = function() {
                    if (!this.dataset.fallback) {
                        this.dataset.fallback = 'true';
                        this.src = `../img/gm-brand-logo.png`;
                        missingRpos.push(rpo);
                    }
                };

                const title = document.createElement('strong');
                title.textContent = rpo;

                const descDiv = document.createElement('div');
                descDiv.className = 'rpo-description';
                const desc = rpos[rpo];
                const lines = Array.isArray(desc) ? desc : [desc];
                descDiv.innerHTML = lines.map(line => `<div>${line}</div>`).join('');

                card.appendChild(img);
                card.appendChild(title);
                card.appendChild(descDiv);
                link.appendChild(card);
                container.appendChild(link);
            });

            setTimeout(() => {
                // if (missingRpos.length > 0) downloadMissingRpos(missingRpos);
            }, 5000);
        }

        function downloadMissingRpos(list) {
            const blob = new Blob([list.join('\n')], { type: 'text/plain' });
            const a = document.createElement('a');
            a.href = URL.createObjectURL(blob);
            a.download = 'missing_rpos.txt';
            a.click();
            URL.revokeObjectURL(a.href);
        }

        modelSelect.addEventListener('change', e => renderRPOs(e.target.value));

        // Initial render
        renderRPOs(modelSelect.value);
    </script>
</body>
</html>
